default namespace = ""

start = moduleset

moduleset = element moduleset { roots,
                                (\include|package)* }

roots = (repository|cvsroot|svnroot|arch-archive)*

repository_cvs   = attribute type { "cvs" },
                   attribute cvsroot { text },
                   attribute password { text }?
repository_svn   = attribute type { "svn" },
                   attribute href { xsd:anyURI }
repository_arch  = attribute type { "arch" },
                   attribute archive { text },
                   attribute href { xsd:anyURI }?
repository_darcs = attribute type { "darcs" },
                   attribute href { xsd:anyURI }
repository_git   = attribute type { "git" },
                   attribute href { xsd:anyURI }

repository = element repository {
  attribute name { text },
  attribute default { "yes" | "no" }?,
  (repository_cvs|repository_svn|repository_arch|
   repository_darcs|repository_git)
}

cvsroot = element cvsroot {
  attribute name { text },
  attribute root { text },
  attribute password { text }?,
  attribute default { "yes" | "no" }?
}

svnroot = element svnroot {
  attribute name { text },
  attribute href { xsd:anyURI },
  attribute default { "yes" | "no" }?
}

arch-archive = element arch-archive {
  attribute name { text },
  attribute href { xsd:anyURI },
  attribute default { "yes" | "no" }?
}

\include = element include {
  attribute href { xsd:anyURI }
}

package = autotools |
          cvsmodule |
          svnmodule |
          archmodule |
          metamodule |
          tarball |
          mozillamodule |
	  gcjmodule |
	  gdbmodule

dep = element dep {
  attribute package { text }
}
dependencies = element dependencies { dep* }
after = element after { dep* } | element suggests { dep* }

common = attribute id { text } & dependencies* & after*

autogen_common = attribute autogenargs { text }? &
                 attribute makeargs { text }? &
                 attribute supports-non-srcdir-builds { "yes" | "no" }? &
                 common

branch_cvs   = attribute module { text }?,
               attribute checkoutdir { text }?,
               attribute revision { text}?
branch_svn   = attribute module { xsd:anyURI }?,
               attribute checkoutdir { text }?
branch_arch  = attribute module { xsd:anyURI }?,
               attribute checkoutdir { text }?
branch_darcs = attribute module { xsd:anyURI }?,
               attribute checkoutdir { text }?
branch_git   = attribute module { xsd:anyURI }?,
               attribute checkoutdir { text }?

branch = element branch {
  attribute repo { text }?,
  (branch_cvs|branch_svn|branch_arch|branch_darcs|branch_git)
}

autotools = element autotools {
  branch &
  autogen_common
}

cvsmodule = element cvsmodule {
  attribute module { text }?,
  attribute revision { text }?,
  attribute checkoutdir { text }?,
  attribute cvsroot { text }?,
  attribute root { text }?,

  autogen_common
}

svnmodule = element svnmodule {
  attribute module { text }?,
  attribute checkoutdir { text }?,
  attribute root { text }?,

  autogen_common
}

archmodule = element archmodule {
  attribute version { text }?,
  attribute checkoutdir { text }?,
  attribute root { text }?,

  autogen_common
}

metamodule = element metamodule { common }

tarball = element tarball {
  attribute version { text },
  attribute checkoutdir { text }?,
  attribute autogenargs { text }?,
  attribute makeargs { text }?,
  attribute supports-non-srcdir-builds { "yes" | "no" }?,

  (element source {
     attribute href { text },
     attribute size { text }?,
     attribute md5sum { text }? } &
   element patches {
     element patch {
       attribute file { text },
       attribute strip { text }?
     }+ }? &
   common)
}

mozillamodule = element mozillamodule {
  attribute module { text }?,
  attribute revision { text }?,
  attribute checkoutdir { text }?,
  attribute autogenargs { text }?,
  attribute makeargs { text }?,
  attribute cvsroot { text }?,
  attribute root { text }?,
  common
}

gcjmodule = element gcjmodule {
  attribute module { text }?,
  attribute revision { text }?,
  attribute checkoutdir { text }?,
  attribute cvsroot { text }?,

  autogen_common
}

gdbmodule = element gdbmodule {
  attribute module { text }?,
  attribute revision { text }?,
  attribute checkoutdir { text }?,
  attribute cvsroot { text }?,

  autogen_common
}

